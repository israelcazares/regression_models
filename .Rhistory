install.packages("RMySQL", type = "source")
Sys.setenv(PKG_CPPFLAGS = "-I/Applications/mampstack-5.4.32-0/mysql/include/mysql")
Sys.setenv(PKG_LIBS = "-L/Applications/mampstack-5.4.32-0/mysql/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_LIBS = "-L/usr/local/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
Sys.setenv(PKG_CPPFLAGS = "-I/Applications/mampstack-5.4.32-0/mysql/include/")
Sys.setenv(PKG_LIBS = "-L/Applications/mampstack-5.4.32-0/mysql/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_LIBS = "-L/usr/local/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
library("RMySQL")
install("DBI")
install.packages("DBI")
install.packages("DBI")
library("RMySQL")
library("DBI")
library("RMySQL")
ucscDB<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDB, "show databases;"); dbDisconnect(ucscDB);
View(result)
View(result)
install.packages("lattice")
install.packages("ggplot2")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
mean(temp)
mean(p)
mean(x)
mean <- sum(temp[1, ]*temp[2, ])
mean
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
?mtcars
modelC = lm(y ~ x - 1)
sum(modelC$fitted.values - y)
modelC = lm(y ~ x - 1)
sum(modelC$fitted.values - y)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
modelC = lm(y ~ x - 1)
sum(modelC$fitted.values - y)
data(mtcars)
setwd("~/Documents/Doctorado/EspecializaciÃ³n/Regression Models/Week3/Project")
data(mtcars)
summary(mtcars)
View(mtcars)
View(mtcars)
transmissionData <- factor(mtcars$am, labels = c("automatic", "manual"))
summary(transmissionData)
mtcarz <- subset(mtcars, select = -c(9))
View(mtcarz)
t.test(mpg~am, data=mtcars)
reg_model <- lm(mpg~am, data = mtcars)
summary(reg_model)$coef
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl, wt), data = mtcars)
compare <- anova(fit1, fit2)
compare$Pr
reg_model <- lm(mpg~am, data = mtcars)
summary(reg_model)$coef
require(knitr)
require(markdown)
source('~/.active-rstudio-document', echo=TRUE)
render("Regression-Models-Course-Project.Rmd", "pdf_document")
require(rmarkdown)
render("Regression-Models-Course-Project.Rmd", "pdf_document")
render("Regression-Models-Course-Project.Rmd", "pdf_document")
